import 'dart:convert';

import 'package:wei_pei_yang_demo/commons/update/common.dart';
import 'package:wei_pei_yang_demo/commons/update/version_data.dart';

///版本更新默认的方法
class UpdateParser {
  /// 解析器
  static Future<Version> parseJson(String json) async {
    Version release = VersionData.fromJson(jsonDecode(json)).info.release;
    print('?????????????????????????????????????????????????');
    print('remote version');
    print(release.toJson());
    print('?????????????????????????????????????????????????');
    if (release == null || release.versionCode == 0) {
      return null;
    }

    String versionCode = await CommonUtils.getVersionCode();
    //服务器返回的最新版本小于等于现在的版本，不需要更新
    print('release.versionCode' + release.versionCode.toString());
    print('local versionCode '+versionCode);

    if (release.versionCode <= int.parse(versionCode)) {
      return null;
    }

    return release;
  }
}
